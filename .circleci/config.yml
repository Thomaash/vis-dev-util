# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

commands:
  install-deps-for-screenshot-taking:
    description: Install headless Chromium dependencies
    steps:
      - run:
          name: Install Headless Chromium dependencies
          command: |
            sudo apt-get install -yq \
            ca-certificates fonts-liberation gconf-service libappindicator1 \
            libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 \
            libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 \
            libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 \
            libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 \
            libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget \
            xdg-utils

executors:
  node:
    docker:
      - image: circleci/node:12.18
    working_directory: ~/repo
    environment:
      GIT_AUTHOR_EMAIL: visjsbot@gmail.com
      GIT_AUTHOR_NAME: vis-bot
      GIT_COMMITTER_EMAIL: visjsbot@gmail.com
      GIT_COMMITTER_NAME: vis-bot

jobs:
  prepare:
    executor: node

    steps:
      - checkout

      - run: npm ci

      - persist_to_workspace:
          root: .
          paths:
            - "*"

  build:
    executor: node

    steps:
      - attach_workspace:
          at: .

      - run: npm run build

      - persist_to_workspace:
          root: .
          paths:
            - "bin"

  lint:
    executor: node

    steps:
      - attach_workspace:
          at: .

      - run: npm run lint

  test:
    executor: node

    steps:
      - attach_workspace:
          at: .

      - install-deps-for-screenshot-taking

      - run: npm run test

  release:
    executor: node

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Prepare NPM
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN

      - run:
          name: Release
          command: |
            npx semantic-release

workflows:
  version: 2

  build:
    jobs:
      - prepare

      - build:
          requires:
            - prepare

      - lint:
          requires:
            - prepare

      - test:
          requires:
            - prepare

      - release:
          requires:
            - prepare
            - build
            - lint
            - test
          filters:
            branches:
              only:
                - master
